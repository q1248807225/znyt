############################################################
##
## 此配置文件为日志配置文件，非开发人员请勿修改。
##
############################################################

# 如需配置自己的logger，请在keys后边添加，如dqsy，后边需有[logger_dqsy] section想对应
[loggers]
keys=root

# 此处定义handlers，这里的定义的handler，如：consoleHandler，下边一定会有[hander_consoleHandler] section相对应
[handlers]
keys=consoleHandler,timedRotatingFileHandler

# 此处定义日志输出的格式，这里定义的simpleFmt，下边必须有[formatter_simpleFmt] section和它对应
[formatters]
keys=simpleFmt


# 日志等级（level）	描述
# DEBUG 	最详细的日志信息，典型应用场景是 问题诊断
# INFO 	信息详细程度仅次于DEBUG，通常只记录关键节点信息，用于确认一切都是按照我们预期的那样进行工作
# WARNING 	当某些不期望的事情发生时记录的信息（如，磁盘可用空间较低），但是此时应用程序还是正常运行的
# ERROR 	由于一个更严重的问题导致某些功能不能正常运行时记录的信息
# CRITICAL 	当发生严重错误，导致应用程序不能继续运行时记录的信息
[logger_root]
level=DEBUG
handlers=consoleHandler,timedRotatingFileHandler


#单独配置name日志，暂时不用
# [logger_dqsy]
# evel=DEBUG
# handlers=consoleHandler,timedRotatingFileHandler
# qualname=dqsy
# propagate=0


# 控制台日志输出
[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleFmt
args=(sys.stdout,)


# 按时间分割的handler
# TimedRotatingFileHandler(filename [,when [,interval [,backupCount]]])
# filename 是输出日志文件名的前缀
# when 是一个字符串的定义如下：
# “S”: Seconds ^^ “M”: Minutes ^^“H”: Hours ^^ “D”: Days
# “W”: Week day (0=Monday) ^^“MIDNIGHT”: Roll over at midnight
# interval 是指等待多少个单位when的时间后，Logger会自动重建文件
# backupCount 是保留日志个数。默认的0是不会自动删除掉日志。若设10，则在文件的创建过程中
# 库会判断是否有超过这个10，若超过，则会从最先创建的开始删除。
[handler_timedRotatingFileHandler]
class=handlers.TimedRotatingFileHandler
level=DEBUG
formatter=simpleFmt
args=("../logs/my.log", "MIDNIGHT", 1, 0)


# 日志输出格式，参考如下：
# %(name)s 打印logger名，默认为root
# %(levelno)s: 打印日志级别的数值
# %(levelname)s: 打印日志级别名称
# %(pathname)s: 打印当前执行程序的路径，其实就是sys.argv[0]
# %(filename)s: 打印当前执行程序名
# %(funcName)s: 打印日志的当前函数
# %(lineno)d: 打印日志的当前行号
# %(asctime)s: 打印日志的时间
# %(message)s: 打印日志信息
# %(thread)d: 打印线程ID
# %(threadName)s: 打印线程名称
# %(process)d: 打印进程ID
# 当前输出格式如下：[2018-09-16 20:02:48,786]-[encu]-[INFO]-[logger_test.py:f():8Line]:This is info message
[formatter_simpleFmt]
format=[%(asctime)s]-[%(name)s]-[%(levelname)s]-[%(filename)s:%(funcName)s():%(lineno)s Line]:%(message)s